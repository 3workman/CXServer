
// Generated by GoServer/src/generat
// Don't edit !
#define Rpc_Enum\
	_Declare(rpc_regist, 1)\
	_Declare(rpc_svr_accept, 2)\
	_Declare(rpc_center_reg_account, 3)\
	_Declare(rpc_center_check_account, 4)\
	_Declare(rpc_center_change_password, 5)\
	_Declare(rpc_center_account_login, 6)\
	_Declare(rpc_center_bind_info_login, 7)\
	_Declare(rpc_center_bind_info, 8)\
	_Declare(rpc_center_get_account_by_bind_info, 9)\
	_Declare(rpc_cross_relay_battle_data, 10)\
	_Declare(rpc_game_battle_ack, 11)\
	_Declare(rpc_game_get_cloud_archive_change_times, 12)\
	_Declare(rpc_game_upload_save_data, 13)\
	_Declare(rpc_game_download_save_data, 14)\
	_Declare(rpc_game_login, 15)\
	_Declare(rpc_game_player_create, 16)\
	_Declare(rpc_game_login_token, 17)\
	_Declare(rpc_game_bind_cloud_archive, 18)\
	_Declare(rpc_game_get_cloud_archive, 19)\
	_Declare(rpc_game_battle_begin, 20)\
	_Declare(rpc_game_probe_login_battle, 21)\
	_Declare(rpc_game_friend_list, 22)\
	_Declare(rpc_game_friend_apply, 23)\
	_Declare(rpc_game_friend_agree, 24)\
	_Declare(rpc_game_friend_refuse, 25)\
	_Declare(rpc_game_friend_del, 26)\
	_Declare(rpc_game_logout, 27)\
	_Declare(rpc_game_heart_beat, 28)\
	_Declare(rpc_game_get_mail, 29)\
	_Declare(rpc_game_read_mail, 30)\
	_Declare(rpc_game_del_mail, 31)\
	_Declare(rpc_game_take_mail_item, 32)\
	_Declare(rpc_game_take_all_mail_item, 33)\
	_Declare(rpc_game_create_team, 34)\
	_Declare(rpc_game_exit_team, 35)\
	_Declare(rpc_game_get_team_info, 36)\
	_Declare(rpc_game_invite_friend, 37)\
	_Declare(rpc_game_agree_join_team, 38)\
	_Declare(rpc_game_send_team_chat, 39)\
	_Declare(rpc_login_account_login, 40)\
	_Declare(rpc_login_bind_info_login, 41)\
	_Declare(rpc_login_reg_account, 42)\
	_Declare(rpc_login_check_account, 43)\
	_Declare(rpc_login_change_password, 44)\
	_Declare(rpc_login_bind_info, 45)\
	_Declare(rpc_login_get_account_by_bind_info, 46)\
	_Declare(rpc_login_get_gamesvr_lst, 47)\
	_Declare(rpc_sdk_echo, 48)\
	_Declare(rpc_file_update_list, 49)\
	_Declare(rpc_battle_login, 50)\
	_Declare(rpc_battle_logout, 51)\
	_Declare(rpc_battle_reconnect, 52)\
	_Declare(rpc_battle_exit_room, 53)\
	_Declare(rpc_battle_direct_join_room, 54)\
	_Declare(rpc_battle_handle_move_input, 55)\
	_Declare(rpc_battle_handle_fire_input, 56)\
	_Declare(rpc_battle_handle_trigger_enter, 57)\
	_Declare(rpc_battle_handle_trigger_exit, 58)\
	_Declare(rpc_battle_forward_anim_state, 59)\
	_Declare(rpc_battle_pick_weapon, 60)\
	_Declare(rpc_battle_drop_weapon, 61)\
	_Declare(rpc_battle_handle_player_data, 62)\
	_Declare(rpc_client_sync_player_join_info, 63)\
	_Declare(rpc_client_spawn_player, 64)\
	_Declare(rpc_client_notify_player_exit_room, 65)\
	_Declare(rpc_client_stop_wait_and_load_battle_scene, 66)\
	_Declare(rpc_client_sync_map, 67)\
	_Declare(rpc_client_sync_objs_position, 68)\
	_Declare(rpc_client_sync_objs_position_facing, 69)\
	_Declare(rpc_client_sync_objs_position_rotation, 70)\
	_Declare(rpc_client_sync_generic_attrs, 71)\
	_Declare(rpc_client_handle_spawn_attrs, 72)\
	_Declare(rpc_client_spawn_object, 73)\
	_Declare(rpc_client_sync_anim_state, 74)\
	_Declare(rpc_client_sync_pickup_weapon, 75)\
	_Declare(rpc_client_sync_drop_weapon, 76)\
	_Declare(rpc_client_sync_trigger_enter, 77)\
	_Declare(rpc_client_sync_trigger_exit, 78)\
	_Declare(rpc_client_destroy_object, 79)\
	_Declare(rpc_client_lua_test, 80)\
	_Declare(rpc_client_sync_buff_add, 81)\
	_Declare(rpc_client_sync_buff_del, 82)\
	_Declare(rpc_svr_node_join, 83)\
	_Declare(rpc_zoo_register, 84)\
	_Declare(rpc_login_get_accountid, 85)\
	_Declare(RpcEnumCnt, 86)\
	


#undef _Declare
#define _Declare(k, v) k = v,
enum RpcEnum:uint16 {
    Rpc_Enum
};
inline const char* RpcIdToName(int id) {
#ifdef _DEBUG
    static std::map<int, const char*> g_rpc_func;
    if (g_rpc_func.empty()) {
#undef _Declare
#define _Declare(k, v) g_rpc_func[v] = #k;
        Rpc_Enum
    }
    return g_rpc_func[id];
#else
    static char str[16];
    sprintf(str, "%d", id);
    return str;
#endif
}
